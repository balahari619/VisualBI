1.
import java.util.Map;
import java.util.LinkedHashMap;
import java.util.Scanner;
public class Main
{
	public static void main(String[] args) {
		Map<String, Integer> ageGroupMap = new LinkedHashMap<>();
		
		Scanner scan = new Scanner(System.in);
		
		int inputCount = scan.nextInt();
		
		for(int i=0; i<inputCount; i++){
		    int age = scan.nextInt();
		    if(age <= 10){
		        if(ageGroupMap.containsKey("0")){
		        ageGroupMap.put("0", ageGroupMap.get("0")+1);
		    }
    		    else{
    		        ageGroupMap.put("0", 1);   
    		    }
		    }
		    else{
		        age = age/10;
    		    if(ageGroupMap.containsKey(age+"")){
    		        ageGroupMap.put(age+"", ageGroupMap.get(age+"")+1);
    		    }
    		    else{
    		        ageGroupMap.put(age+"", 1);   
    		    }   
		    }
		}
		System.out.println(ageGroupMap);
	}
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
2.
#include <stdio.h>    
     
int main()    
{    
 
    int arr[] = {1, 2, 3, 4, 5, 6, 7};       
    int length = sizeof(arr)/sizeof(arr[0]);      
    int k = 3;    
        
    //Display original array    
    printf("Original array: \n");    
    for (int i = 0; i < length; i++) {     
        printf("%d ", arr[i]);     
    }     
        
    //Rotate the given array by n times to right    
    for(int i = 0; i < k; i++){    
        int j, last;      
        last = arr[length-1];    
        for(j = length-1; j > 0; j--){    
            arr[j] = arr[j-1];    
        }       
        arr[0] = last;    
    }    
        
    printf("\n");    
        
    //Display array after right rotation    
    printf("Array after right rotation: \n");    
    for(int i = 0; i< length; i++){    
        printf("%d ", arr[i]);    
    }    
    return 0;    
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3.
#include <bits/stdc++.h>
using namespace std;
void findRepeat(int arr[],int n){
   int count=0; 
   int value=0; 
   for(int i=0;i<n;i++){
      if(arr[i]==arr[i+1]){
         count++;
         value=arr[i];
      }
   }
   count++;
   cout<<"Repeated Element: "<<value;
   cout<<endl<<"Number of occurrences: "<<count;
}
int main(){
   int Arr[]={ 2,3,4,5,5,5,6,7,8 };
   int len=sizeof(Arr)/sizeof(Arr[0]);
   findRepeat(Arr,len);
   return 0;
}